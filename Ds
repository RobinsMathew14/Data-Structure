#include <stdio.h>
int enqueue(int Queue[],int rear,int n){
    if(rear==n-1)
    {
        printf("\nQueue Overflow");
    }
    else{
        int item;
        rear++;
        printf("\nEnter the element to be added: ");
        scanf("%d",&item);
        Queue[rear]=item;
    }
    return rear;
}
int dequeue(int Queue[],int front,int rear){
    if(rear<front){
        printf("\nQueue Underflow");
    }
    else{
        printf("\n  The deleted element is: %d ",Queue[front]);
        front++;
    }
    return front;
}
void display(int Queue[],int front,int rear){
    if (rear<front){
        printf("\nThe queue is empty");
    }
    else{
        printf("\nThe elements in the queue is:\n");
        for(int i=front;i<=rear;i++){
            printf("%d ",Queue[i]);
        }
    }
}
int main(){
    int n,front=0,rear=-1,choice;
    char c;
    printf("\nEnter the stack size: ");
    scanf("%d",&n);
    int Queue[n];
    do{
            printf("\nQueue operations");
            printf("\n1.enqueue\n2.dequeue\n3.Display");
            printf("\nEnter the choice");
            scanf("%d",&choice);
            switch(choice){
                case 1:
                    rear=enqueue(Queue,rear,n);
                    break;
                case 2:
                    front=dequeue(Queue,front,rear);
                    break;
                case 3:
                    display(Queue,front,rear);
                    break;
                default:
                    printf("\nInvalid choice");
                    break;
            }
            printf("\nDo you want to continue or not(Y/N): ");
            scanf(" %c",&c);
        }while(c=='y'||c=='Y');
    printf("\nExiting...");
    return 0;
}






..





#include <stdio.h>
int push(int stack[],int top,int n){
    if(top>=n-1)
    {
        printf("Stack Overflow");
    }
    else{
        int item;
        top++;
        printf("\nEnter the element to be added: ");
        scanf("%d",&item);
        stack[top]=item;
    }
    return top;
}
int pop(int stack[],int top){
    if(top==-1){
        printf("\nStack Underflow");
    }
    else{
        int item=stack[top];
        printf("The deleted element is: %d",item);
        top--;
    }
    return top;
}
void display(int stack[],int top){
    printf("\nThe elements in the stack is:\n");
    for(int i=0;i<=top;i++){
        printf("%d ",stack[i]);
    }
}
int main(){
    int n,top=-1,choice;
    char c;
    printf("\nEnter the stack size: ");
    scanf("%d",&n);
    int stack[n];
    do{
            printf("\nStack operations");
            printf("\n1.push\n2.pop\n3.Display");
            printf("\nEnter the choice");
            scanf("%d",&choice);
            switch(choice){
                case 1:
                    top=push(stack,top,n);
                    break;
                case 2:
                    top=pop(stack,top);
                    break;
                case 3:
                    display(stack,top);
                    break;
                default:
                    printf("\nInvalid choice");
                    break;
            }
            printf("\nDo you want to continue or not(Y/N): ");
            scanf(" %c",&c);
        }while(c=='y'||c=='Y');
    printf("\nExiting...");
}
